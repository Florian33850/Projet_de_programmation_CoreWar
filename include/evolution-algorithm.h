#pragma once
#include "evolution-parameters.h"
#include "../mars-interface/interface.h"


/// <summary>
/// Return a warrior resulting from the mutation of the instructions of the past warrior's code according to a probability passed into parameter 
/// </summary>
/// <param name="warrior">A warrior to modify</param>
/// <param name="mutate_proba">Probability of mutations</param>
/// <param name="A_value_modifier">Value of the modification to apply to A_value, between -4000 and +4000</param>
/// <param name="B_value_modifier">Value of the modification to apply to B_value, between -4000 and +4000</param>
/// <returns>Return a New Mutated Warrior</returns>
warrior_s* mutate(warrior_s* warrior, evolution_params* params);

/// <summary>
/// Return a warrior whose code size has been modified according to the two probabilities entered in parameters
/// </summary>
/// <param name="warrior">A warrior to modify</param>
/// <param name="increase_length_proba">Probability of increase the code size of the warrior</param>
/// <param name="reduce_length_proba">Probability of reduce the code size of the warrior</param>
/// <returns>Return a New Mutated Warrior</returns>
warrior_s* mutate_length(warrior_s* warrior, float increase_length_proba, float reduce_length_proba);

/// <summary>
/// Return a warrior resulting from the fusion of warrior1's code with warrior2's code according to a probability passed into parameter 
/// </summary>
/// <param name="warrior1">The first warrior</param>
/// <param name="warrior2">The second warrior</param>
/// <param name="p_breed_line">Probability that can modify an instruction</param>
/// <returns>Returns the fusion of the two warriors</returns>
warrior_s* breed(warrior_s* warrior1, warrior_s* warrior2, float p_breed_line);

/// <summary>
/// Return warriors generated by the evolution algorithm according to the parameters shown
/// </summary>
/// <param name="warriors">A list of warriors</param>
/// <param name="params">Evolution parameters</param>
/// <returns>The warriors generated by the evolution algorithm</returns>
warrior_s** evolution_algorithmV1(warrior_s** warriors, evolution_params* params);

void print_results(char* json_file, float score);